name: CD

on: workflow_dispatch

permissions:
  contents: read
  pull-requests: write

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Get version
        id: get_version
        run: echo "version=$(uv version --short)" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Build the project
        run: uv build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [version, build]
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ needs.version.outputs.version }}
          tag_name: v${{ needs.version.outputs.version }}
          files: |
            dist/*.whl
            dist/*.tar.gz
          make_latest: true
          generate_release_notes: true

  pypi:
    runs-on: ubuntu-latest
    needs: [version, build]

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Publish to PyPI
        run: uv publish dist/*.whl dist/*.tar.gz
        env:
          UV_PUBLISH_TOKEN: ${{ secrets.UV_PYPI_TOKEN }}
